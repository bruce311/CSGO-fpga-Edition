--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=10 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_lpm_compare 2017:04:25:18:06:29:SJ cbx_lpm_decode 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_nma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2018w[1..0]	: WIRE;
	w_anode2027w[3..0]	: WIRE;
	w_anode2044w[3..0]	: WIRE;
	w_anode2054w[3..0]	: WIRE;
	w_anode2064w[3..0]	: WIRE;
	w_anode2074w[3..0]	: WIRE;
	w_anode2084w[3..0]	: WIRE;
	w_anode2094w[3..0]	: WIRE;
	w_anode2104w[3..0]	: WIRE;
	w_anode2116w[1..0]	: WIRE;
	w_anode2123w[3..0]	: WIRE;
	w_anode2134w[3..0]	: WIRE;
	w_anode2144w[3..0]	: WIRE;
	w_anode2154w[3..0]	: WIRE;
	w_anode2164w[3..0]	: WIRE;
	w_anode2174w[3..0]	: WIRE;
	w_anode2184w[3..0]	: WIRE;
	w_anode2194w[3..0]	: WIRE;
	w_data2016w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[9..0] = eq_wire[9..0];
	eq_wire[] = ( ( w_anode2194w[3..3], w_anode2184w[3..3], w_anode2174w[3..3], w_anode2164w[3..3], w_anode2154w[3..3], w_anode2144w[3..3], w_anode2134w[3..3], w_anode2123w[3..3]), ( w_anode2104w[3..3], w_anode2094w[3..3], w_anode2084w[3..3], w_anode2074w[3..3], w_anode2064w[3..3], w_anode2054w[3..3], w_anode2044w[3..3], w_anode2027w[3..3]));
	w_anode2018w[] = ( (w_anode2018w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2027w[] = ( (w_anode2027w[2..2] & (! w_data2016w[2..2])), (w_anode2027w[1..1] & (! w_data2016w[1..1])), (w_anode2027w[0..0] & (! w_data2016w[0..0])), w_anode2018w[1..1]);
	w_anode2044w[] = ( (w_anode2044w[2..2] & (! w_data2016w[2..2])), (w_anode2044w[1..1] & (! w_data2016w[1..1])), (w_anode2044w[0..0] & w_data2016w[0..0]), w_anode2018w[1..1]);
	w_anode2054w[] = ( (w_anode2054w[2..2] & (! w_data2016w[2..2])), (w_anode2054w[1..1] & w_data2016w[1..1]), (w_anode2054w[0..0] & (! w_data2016w[0..0])), w_anode2018w[1..1]);
	w_anode2064w[] = ( (w_anode2064w[2..2] & (! w_data2016w[2..2])), (w_anode2064w[1..1] & w_data2016w[1..1]), (w_anode2064w[0..0] & w_data2016w[0..0]), w_anode2018w[1..1]);
	w_anode2074w[] = ( (w_anode2074w[2..2] & w_data2016w[2..2]), (w_anode2074w[1..1] & (! w_data2016w[1..1])), (w_anode2074w[0..0] & (! w_data2016w[0..0])), w_anode2018w[1..1]);
	w_anode2084w[] = ( (w_anode2084w[2..2] & w_data2016w[2..2]), (w_anode2084w[1..1] & (! w_data2016w[1..1])), (w_anode2084w[0..0] & w_data2016w[0..0]), w_anode2018w[1..1]);
	w_anode2094w[] = ( (w_anode2094w[2..2] & w_data2016w[2..2]), (w_anode2094w[1..1] & w_data2016w[1..1]), (w_anode2094w[0..0] & (! w_data2016w[0..0])), w_anode2018w[1..1]);
	w_anode2104w[] = ( (w_anode2104w[2..2] & w_data2016w[2..2]), (w_anode2104w[1..1] & w_data2016w[1..1]), (w_anode2104w[0..0] & w_data2016w[0..0]), w_anode2018w[1..1]);
	w_anode2116w[] = ( (w_anode2116w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2123w[] = ( (w_anode2123w[2..2] & (! w_data2016w[2..2])), (w_anode2123w[1..1] & (! w_data2016w[1..1])), (w_anode2123w[0..0] & (! w_data2016w[0..0])), w_anode2116w[1..1]);
	w_anode2134w[] = ( (w_anode2134w[2..2] & (! w_data2016w[2..2])), (w_anode2134w[1..1] & (! w_data2016w[1..1])), (w_anode2134w[0..0] & w_data2016w[0..0]), w_anode2116w[1..1]);
	w_anode2144w[] = ( (w_anode2144w[2..2] & (! w_data2016w[2..2])), (w_anode2144w[1..1] & w_data2016w[1..1]), (w_anode2144w[0..0] & (! w_data2016w[0..0])), w_anode2116w[1..1]);
	w_anode2154w[] = ( (w_anode2154w[2..2] & (! w_data2016w[2..2])), (w_anode2154w[1..1] & w_data2016w[1..1]), (w_anode2154w[0..0] & w_data2016w[0..0]), w_anode2116w[1..1]);
	w_anode2164w[] = ( (w_anode2164w[2..2] & w_data2016w[2..2]), (w_anode2164w[1..1] & (! w_data2016w[1..1])), (w_anode2164w[0..0] & (! w_data2016w[0..0])), w_anode2116w[1..1]);
	w_anode2174w[] = ( (w_anode2174w[2..2] & w_data2016w[2..2]), (w_anode2174w[1..1] & (! w_data2016w[1..1])), (w_anode2174w[0..0] & w_data2016w[0..0]), w_anode2116w[1..1]);
	w_anode2184w[] = ( (w_anode2184w[2..2] & w_data2016w[2..2]), (w_anode2184w[1..1] & w_data2016w[1..1]), (w_anode2184w[0..0] & (! w_data2016w[0..0])), w_anode2116w[1..1]);
	w_anode2194w[] = ( (w_anode2194w[2..2] & w_data2016w[2..2]), (w_anode2194w[1..1] & w_data2016w[1..1]), (w_anode2194w[0..0] & w_data2016w[0..0]), w_anode2116w[1..1]);
	w_data2016w[2..0] = data_wire[2..0];
END;
--VALID FILE
